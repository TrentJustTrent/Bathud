#!/usr/bin/env bash

print_help() {
	cat <<EOF
Usage: $(basename "$0") <command> [options]

Commands:
	run           Run the main application.
	quit          Exit or stop the application.
	launcher      Launch a specific component.
	screenshot    Take a screenshot.
	volume-up     Increase system volume.
	volume-down   Decrease system volume.
	mute          Mute system sound.
	help          Show this help message.

Global Options:
	-h,  --help         Show help for a specific command
EOF
}

run_run_command() {
	if [ -d "/usr/share/okpanel" ]; then
		dir="/usr/share/okpanel"
	elif [ -d "$HOME/.local/share/okpanel" ]; then
		dir="$HOME/.local/share/okpanel"
	else
		dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/../ags
	fi

	# make the config file if it doesn't exist so that we can monitor for config changes
	mkdir -p $HOME/.config/OkPanel

	# Start astal-tray if not already running
	if ! pgrep -x "astal-tray" > /dev/null; then
		echo "Starting astal-tray..."
		nohup astal-tray -d >/dev/null 2>&1 &
	fi

	# Start hyprsunset if not already running
	if ! pgrep -x "hyprsunset" > /dev/null; then
		echo "Starting hyprsunset..."
		nohup hyprsunset -i >/dev/null 2>&1 &
	fi


	if [ ! -f ~/.config/cliphist/config ]; then
		echo "Setting cliphist defaults in ~/.config/cliphist/config"
		mkdir -p ~/.config/cliphist
        echo -e "max-items 25\npreview-width 500" > ~/.config/cliphist/config
    fi

	# listen for interruptions so we can cleanup properly
	trap cleanup SIGINT SIGTERM

	echo "Starting ags..."
	ags run --gtk4 -d $dir -a $dir
}

cleanup() {
	pkill -9 -f hyprsunset
}

quit() {
	cleanup
	ags quit -i "OkPanel"
}

main() {
	if [[ $# -lt 1 ]]; then
		print_help
		exit 1
	fi

	case $1 in
		run)          run_run_command;;
		quit)         quit;;
		launcher)     astal -i "OkPanel" "appLauncher";;
		screenshot)   astal -i "OkPanel" "screenshot";;
		volume-up)    astal -i "OkPanel" "volume-up";;
		volume-down)  astal -i "OkPanel" "volume-down";;
		mute)         astal -i "OkPanel" "mute";;
		help|-h|--help) print_help;;
		*) echo "Unknown command: $1"; print_help; exit 1 ;;
	esac
}

main "$@"
